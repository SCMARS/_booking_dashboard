name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Build
        env:
          NEXT_TELEMETRY_DISABLED: '1'
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID }}

          VAPI_PRIVATE_KEY: ${{ secrets.VAPI_PRIVATE_KEY }}
          VAPI_PUBLIC_KEY: ${{ secrets.VAPI_PUBLIC_KEY }}
          VAPI_ASSISTANT_ID: ${{ secrets.VAPI_ASSISTANT_ID }}
          VAPI_WEBHOOK_URL: ${{ secrets.VAPI_WEBHOOK_URL }}
        run: npm run build

  test-api:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start development server
        run: npm run dev &
        env:
          VAPI_PRIVATE_KEY: ${{ secrets.VAPI_PRIVATE_KEY }}
          VAPI_PUBLIC_KEY: ${{ secrets.VAPI_PUBLIC_KEY }}
          VAPI_ASSISTANT_ID: ${{ secrets.VAPI_ASSISTANT_ID }}

      - name: Wait for server
        run: sleep 15

      - name: Test Vapi API endpoints
        run: |
          echo "ðŸ§ª Testing Vapi API endpoints..."
          
          echo "Testing webhook endpoint..."
          curl -f http://localhost:3000/api/vapi/webhook || exit 1
          
          echo "Testing assistants endpoint..."
          curl -f http://localhost:3000/api/vapi/assistants || exit 1
          
          echo "âœ… All API tests passed!"

  deploy:
    needs: [build-and-test, test-api]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'
          vercel-env: |
            VAPI_PRIVATE_KEY=${{ secrets.VAPI_PRIVATE_KEY }}
            VAPI_PUBLIC_KEY=${{ secrets.VAPI_PUBLIC_KEY }}
            VAPI_ASSISTANT_ID=${{ secrets.VAPI_ASSISTANT_ID }}
            VAPI_WEBHOOK_URL=${{ secrets.VAPI_WEBHOOK_URL }}


